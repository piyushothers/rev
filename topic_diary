!!!current roster
!!! time table

8/27/2019	refactoring - chapter 1 to 3, creating a connected component in react , setting up react saga , difference between test stubs and test mocks(martin fowler article)
8/28/2019	flexbox mdn site , css selectors w3 schools , refactoring chapter 4-9 
8/29/2019	refactoring chapter 10-11, SOUL session 1, https://www.airpair.com/express/posts/expressjs-and-passportjs-sessions-deep-dive
8/31/2019	refactoring 12-15
9/4/2019	- render props , render props with typescript medium article , render props in angular , wap - render props in react
9/11/2019	1.Kruskal algorithm 2.Prim's algorithm 3.running time for insertion and pop from a heap 4. how to make a stream for finite for loops 5.heap implementation for any comparable object  GridOfManyXors - did everything right but still the solution doesn't work leave it. v(logV) + ElogV why is prim algorithm mmm - moniker - an informal name . Barking up the wrong tree chapter 3 . Concurrent linked queue ? all the collections in java.util.concurrent and what are they used for ? concurrent linked queue
9/12/2019	shortcuts in reasoning chapter 1-11


September 7th
==============

1.Kruskal algorithm 2.Prim's algorithm 3.running time for insertion and pop from a heap 4. how to make a stream for finite for loops 5.heap implementation for any comparable object  GridOfManyXors - did everything right but still the solution doesn't work leave it v(logV) + ElogV why is prim algorithm mmm - moniker - an informal name


8th
====
following components to be provided by reactive stream implementations
	- Publisher 
	- Subscriber
	- Subscription
	- Processor
	
- publishers cannot signal more elements than subscribers have requested.

Concurrent linked queue ? 
all the collections in java.util.concurrent and what are they used for ? 

concurrent linked queue 
	- iterators are weakly consistent 
	- size method is not a constant time operation as it requires traversal 
	- memory consistency effects: actions in a thread prior to placing an object into a Concurrent Linked Queue happen-before actions subsequent to the access or removal of that element from the ConcurrentLinkedQueue in another thread. 

what is compare and set operation ?  implementation of concurrent linked queue ? how is garbage collection done ? java memory model  ? what is sun.misc.UNSAFE ? 
https://dzone.com/articles/understanding-sunmiscunsafe . what are class loaders . how is class loading done in java . how does sun.misc.UNSAFE guarantee that it is only called from its own internal classes. reflectionfactory in java . how to create a class in java without calling its constructor . 


sun.misc.unsafe 
	- singleton instance is loaded in a private static field called theUnsafe.
	- 
	
links 
	- http://www.cs.rochester.edu/~scott/papers/1996_PODC_queues.pdf
	
14th (Crossover start)
-----
Junit
	1.
- lifecycle methods of junit test file . 
	- rules of each lifecycle method.
	- expecting exceptions
	- runner and what are its benefits
	
- the order of test cases varies from JVM to JVM.
- assumeTrue,assumeFalse,assumeThat,assumeNotNull 
- how to write a test suite 
- isNaN in java ? 
- creating your own Matcher using hamcrest interfaces.
- theory . timed out tests . parameterized test with constructor . parameterized test without constructor.
- https://dzone.com/articles/building-custom-datapoints
- rule allow very flexible addition or redefinition of the behavior of each test method in a test class.
- temporaryfolder rule , error collector rule , timeout rule , external resource rule , test name rule , verifier rule.

1.how to run code snippets a) before and after each test b) before and after the class 2.assertSame vs assertEquals 3.how to test for a double value with some room for error 4.how to test for a function whose expected output is an exception 5.what is a valid input to Suite.class 6.@Ignore and why is it better than commenting out the code 7.how to determine the order in which the tests run , can we enforce our own ordering on the test 8.what are assumptions and why should we use it during tests 9.how to assert with Matcher , the library where Matchers are found and what are its benefits 10.how to create own custom matcher 11.how to create parameterized tests using constructor 12. how to create parameterized test without constructor and how to assign order to fields 13.how to enforce timeout for a test ( possible reason might be for performance reasons) 14.why are theories used 15. how to create a external parameter supplier to a theory 16.timeout rule 17.ExpectedException rule 18.temporaryfolder rule and where is the path for temporary folder 19.ErrorCollector rule 20.verifier rule 21.TestWatcher rule 22.testName rule 23.Category runner and why are they used , what happens when a class is in both IncludeCategories and ExcludeCategories.

3.
- types of test doubles 

15th
----
https://www.javaworld.com/article/2074689/hamcrest-containing-matchers.html 
verify is like toBeCalled , thenAnswer has to be supplied with an instance of answer interface so that dynamic logic can be applied . spy is for spying on objects . mockDetails is to know whether the instance is a mock or spy . argumentCaptor is to capture the arguments called for a method . 

activity
 - i1 - chapter 4 and 5 - packt mastering unit testing with junit4 and mockito
 
16th
----
 !!!current roster
1.health*
2.ebs
3.health*
4.health*
5.ebs
6.r
7.r
8.r
9.d&k
10.r
11.health*
12.r
13.health*
14.health*
15.health*
16.r
17.health*
18.health*
19.health*
20.health*
21.health*
22.health*
23.health*
24.health*
25.health*
26.health*
27.health*
28.r
29.r
30.r
31.r
32.ec2
33.ec2
34.ec2
35.ec2
36.ec2
37.health*
38.ec2
39.health*
40.ec2
41.health*
42.health*
43.r
44.ec2
45.ec2
46.ec2
47.health*
48.health*
49.health*
50.health*
51.health*
52.ec2
53.health*
54.r
55.health*
56.ec2
57.health*
58.ec2
59.ec2
60.health*
61.r
62.r
63.health*
64.vpc
65.health*
66.vpc
67.health*
68.health*
69.health*
70.vpc
71.health*
72.vpc
73.health*
74.health*
75.health*
76.elb
77.r
78.r
79.health*
80.health*
81.ec2
82.r
83.health*
84.r
85.r
86.r
87.r
88.health*
89.r
90.r
91.elb
92.r
93.health*
94.r
95.vpc
96.health*
97.health*
98.health*
99.health*
100.vpc
101.r
102.health*
103.health*
104.vpc
105.health*
106.vpc
107.r
108.health*
109.health*
110.health*
111.r
112.health*
113.health*
114.r
115.health*
116.health*
117.r
118.health*
119.health*
120.health*
121.health*
122.r
123.health*
124.r
125.health*
126.vpc
127.r
128.health*
129.health*
130.r
131.ec2
132.ebs
133.ebs
134.health*
135.health*
136.ebs
137.ec2
138.health*
139.ec2
140.UML modelling
141.health*
142.health*
143.UML modelling
144.health*
145.health*
146.health*
147.ec2
148.health*
149.health*
150.UML modelling
151.health*
152.UML modelling
153.health*
154.UML modelling
155.health*
156.health*
157.health*
158.ec2
159.UML modelling
160.health*
161.health*
162.ec2
163.ec2
164.health*
165.ec2
166.UML modelling
167.health*
168.health*
169.health*
170.UML modelling
171.elb
172.health*
173.ec2
174.elb
175.ec2
176.r
177.ec2
178.health*
179.health*
180.health*
181.ec2
182.health*
183.ec2
184.r
185.r
186.r
187.r
188.r
189.r
190.health*
191.r
192.ec2
193.r
194.health*
195.r
196.r
197.r
198.r
199.health*
200.ec2
201.ec2
202.UML modelling
203.ec2
204.health*
205.health*
206.ec2
207.ec2
208.ec2
209.health*
210.health*
211.health*
212.ec2
213.ec2
214.health*
215.health*
216.health*
217.health*
218.health*
219.health*
220.UML modelling
221.health*
222.vpc
223.health*
224.ec2
225.ec2
226.health*
227.health*
228.vpc
229.health*
230.vpc
231.r
232.health*
233.health*
234.health*
235.health*
236.health*
237.r
238.vpc
239.r
240.health*
241.health*
242.health*
243.health*
244.health*
245.r
246.ec2
247.health*
248.health*
249.health*
250.ec2
251.health*
252.health*
253.health*
254.health*
255.health*
256.ec2
257.ec2
258.ec2
259.health*
260.ec2
261.ec2
262.health*
263.health*
264.ec2
265.vpc
266.health*
267.vpc
268.health*
269.ec2
270.health*
271.health*
272.health*
273.health*
274.ec2
275.vpc
276.health*
277.health*
278.health*
279.vpc
280.health*
281.health*
282.health*
283.vpc
284.health*
285.vpc
286.UML modelling
287.health*
288.r
289.r
290.health*
291.UML modelling
292.UML modelling
293.UML modelling
294.r
295.health*
296.UML modelling
297.UML modelling
298.health*
299.health*
300.health*
301.r
302.health*
303.r
304.UML modelling
305.UML modelling
306.health*
307.r
308.health*
309.health*
310.health*
311.UML modelling
312.UML modelling
313.r
314.ec2
315.r
316.r
317.r
318.r
319.health*
320.vpc
321.health*
322.ec2
323.health*
324.health*
325.health*
326.health*
327.r
328.health*
329.health*
330.ec2
331.ec2
332.health*
333.UML modelling
334.health*
335.health*
336.ec2
337.r
338.health*
339.UML modelling
340.health*
341.ec2
342.elb
343.health*
344.ec2
345.ec2
346.health*
347.health*
348.UML modelling
349.health*
350.ec2
351.UML modelling
352.UML modelling
353.health*
354.health*
355.elb
356.health*
357.health*
358.health*
359.UML modelling
360.health*
361.UML modelling
362.UML modelling
363.ec2
364.ec2
365.elb
366.elb
367.r
368.r
369.r
370.elb
371.health*
372.r
373.health*
374.elb
375.health*
376.elb
377.health*
378.elb
379.health*
380.elb
381.elb
382.elb
383.elb
384.health*
385.health*
386.elb
387.health*
388.r
389.ec2
390.r
391.r
392.health*
393.health*
394.ec2
395.health*
396.ec2
397.health*
398.health*
399.health*
400.health*
401.health*
402.health*
403.health*
404.ec2
405.health*
406.ec2
407.elb
408.vpc
409.vpc
410.health*
411.health*
412.health*
413.elb
414.health*
415.health*
416.auto scaling
417.health*
418.auto scaling
419.vpc
420.vpc
421.auto scaling
422.ec2
423.health*
424.health*
425.vpc
426.vpc
427.vpc
428.health*
429.ec2
430.health*
431.ec2
432.vpc
433.vpc
434.health*
435.health*
436.health*
437.health*
438.health*
439.vpc
440.health*
441.vpc
442.ec2
443.vpc
444.ec2
445.health*
446.health*
447.auto scaling
448.vpc
449.health*
450.vpc
451.health*
452.health*
453.ec2
454.health*
455.health*
456.health*
457.health*
458.vpc
459.ec2
460.health*
461.vpc
462.health*
463.ec2
464.health*
465.health*
466.vpc
467.ec2
468.health*
469.health*
470.vpc
471.health*
472.health*
473.vpc
474.health*
475.ec2
476.ec2
477.health*
478.ec2
479.health*
480.ec2
481.health*
482.ec2
483.health*
484.vpc
485.ec2
486.health*
487.ec2
488.ec2
489.ec2
490.health*
491.rds and aurora
492.ec2
493.auto scaling
494.health*
495.health*
496.health*
497.health*
498.rds and aurora
499.health*
500.ec2

!!!rev_roster
1.r_month-2
2.r_month-2
3.r_month*
4.r_month*
5.r_random
6.r_month*
7.r_month*
8.r_month*
9.r_month-2
10.r_month-2
11.r_year
12.r_random
13.r_year
14.r_month*
15.r_month*
16.r_month*
17.r_month*
18.r_month-2
19.r_month*
20.r_year
21.r_month*
22.r_month*
23.r_random
24.r_month*
25.r_month*
26.r_month*
27.r_month*
28.r_month*
29.r_random
30.r_month*
31.r_month*
32.r_month*
33.r_month*
34.r_month*
35.r_month*
36.r_random
37.r_year
38.r_year
39.r_month*
40.r_random
41.r_month*
42.r_random
43.r_month*
44.r_month*
45.r_month*
46.r_month-2
47.r_month-2
48.r_month*
49.r_month*
50.r_year
51.r_year
52.r_month-2
53.r_month*
54.r_month*
55.r_month-2
56.r_year
57.r_month-3
58.r_month-3
59.r_month-3
60.r_month*
61.r_month-3
62.r_month-3
63.r_month-3
64.r_month*
65.r_year
66.r_year
67.r_month*
68.r_month*
69.r_month*
70.r_month*
71.r_year
72.r_month-3
73.r_month*
74.r_year
75.r_month-3
76.r_random
77.r_month*
78.r_month*
79.r_random
80.r_random
81.r_month*
82.r_month*
83.r_month-3
84.r_month*
85.r_month*
86.r_year
87.r_month*
88.r_month*
89.r_month*
90.r_month*
91.r_month-3
92.r_month-3
93.r_month-3
94.r_month*
95.r_random
96.r_year
97.r_month*
98.r_year
99.r_year
100.r_year
101.r_month*
102.r_year
103.r_month*
104.r_month*
105.r_month*
106.r_month*
107.r_year
108.r_month*
109.r_month*
110.r_month*
111.r_month-2
112.r_month*
113.r_month*
114.r_month-2
115.r_month-3
116.r_year
117.r_year
118.r_year
119.r_year
120.r_year
121.r_month*
122.r_month*
123.r_month-3
124.r_month-3
125.r_month-2
126.r_month-2
127.r_month-2
128.r_year
129.r_month-2
130.r_month*
131.r_month*
132.r_random
133.r_random
134.r_month*
135.r_month-3
136.r_month*
137.r_month-2
138.r_month-2
139.r_month*
140.r_month-2
141.r_month-2
142.r_month-2
143.r_month*
144.r_random
145.r_month*
146.r_month*
147.r_month-2
148.r_month*
149.r_month-2
150.r_month-2
151.r_random
152.r_year
153.r_year
154.r_month*
155.r_month*
156.r_year
157.r_month*
158.r_month*
159.r_month*
160.r_month*
161.r_year
162.r_year
163.r_month*
164.r_month*
165.r_year
166.r_month*
167.r_random
168.r_month*
169.r_random
170.r_year
171.r_random
172.r_year
173.r_month-2
174.r_month*
175.r_month*
176.r_year
177.r_month*
178.r_month*
179.r_month*
180.r_month*
181.r_month*
182.r_month-2
183.r_year
184.r_month*
185.r_year
186.r_random
187.r_month*
188.r_month-3
189.r_month*
190.r_month*
191.r_month*
192.r_month-3
193.r_year
194.r_month*
195.r_month*
196.r_year
197.r_year
198.r_month*
199.r_month-2
200.r_year
201.r_random
202.r_year
203.r_random
204.r_month*
205.r_month*
206.r_month*
207.r_random
208.r_random
209.r_month*
210.r_month*
211.r_month*
212.r_month*
213.r_random
214.r_month*
215.r_random
216.r_month-3
217.r_month*
218.r_month*
219.r_month*
220.r_month*
221.r_random
222.r_month*
223.r_month-3
224.r_month-2
225.r_month-2
226.r_month*
227.r_month*
228.r_month-2
229.r_random
230.r_month-2
231.r_month*
232.r_random
233.r_random
234.r_month*
235.r_month*
236.r_random
237.r_month*
238.r_month-3
239.r_random
240.r_month-3
241.r_month*
242.r_year
243.r_random
244.r_month*
245.r_random
246.r_year
247.r_random
248.r_random
249.r_month*
250.r_month-3
251.r_month*
252.r_month-3
253.r_month-2
254.r_month*
255.r_month*
256.r_month*
257.r_random
258.r_month-3
259.r_month-3
260.r_month*
261.r_month-3
262.r_month*
263.r_month*
264.r_random
265.r_month*
266.r_month*
267.r_random
268.r_random
269.r_random
270.r_month*
271.r_month*
272.r_random
273.r_month*
274.r_month*
275.r_month*
276.r_month*
277.r_month*
278.r_month*
279.r_month-3
280.r_month*
281.r_month-2
282.r_month-2
283.r_month*
284.r_month-3
285.r_month*
286.r_month-3
287.r_month*
288.r_month-3
289.r_month-3
290.r_random
291.r_month*
292.r_month-3
293.r_month-3
294.r_month-3
295.r_random
296.r_month*
297.r_random
298.r_random
299.r_random
300.r_random
301.r_month*
302.r_year
303.r_month-3
304.r_month-3
305.r_year
306.r_month*
307.r_month*
308.r_year
309.r_month*
310.r_year
311.r_month*
312.r_month*
313.r_month*
314.r_month-2
315.r_month*
316.r_month-3
317.r_month-3
318.r_year
319.r_month*
320.r_year
321.r_month*
322.r_year
323.r_month-3
324.r_month-3
325.r_month-3
326.r_month-3
327.r_month-3
328.r_month-3
329.r_month*
330.r_year
331.r_year
332.r_month*
333.r_month*
334.r_random
335.r_month-3
336.r_month-3
337.r_month*
338.r_random
339.r_month-3
340.r_month-3
341.r_year
342.r_random
343.r_month-2
344.r_month*
345.r_month-2
346.r_month-2
347.r_month-2
348.r_month*
349.r_month*
350.r_month*
351.r_year
352.r_month*
353.r_month*
354.r_year
355.r_month-3
356.r_month*
357.r_month*
358.r_month-3
359.r_month-3
360.r_random
361.r_month*
362.r_month*
363.r_year
364.r_month*
365.r_month*
366.r_month*
367.r_year
368.r_year
369.r_month-3
370.r_month-3
371.r_month*
372.r_month-3
373.r_month-3
374.r_month*
375.r_month*
376.r_year
377.r_year
378.r_month*
379.r_month-3
380.r_month-3
381.r_month-3
382.r_month-3
383.r_month*
384.r_random
385.r_random
386.r_month-3
387.r_month*
388.r_month*
389.r_month*
390.r_month*
391.r_year
392.r_year
393.r_month*
394.r_month*
395.r_month*
396.r_month-3
397.r_month-3
398.r_month*
399.r_month*
400.r_month*
401.r_month*
402.r_year
403.r_year
404.r_month-2
405.r_month-2
406.r_month*
407.r_month-2
408.r_year
409.r_month-3
410.r_month-3
411.r_month*
412.r_month*
413.r_month-3
414.r_month*
415.r_random
416.r_month-2
417.r_month*
418.r_month*
419.r_year
420.r_month*
421.r_month*
422.r_random
423.r_year
424.r_random
425.r_month*
426.r_month*
427.r_month*
428.r_month-3
429.r_month*
430.r_random
431.r_month*
432.r_random
433.r_month*
434.r_month*
435.r_month*
436.r_month*
437.r_month*
438.r_month*
439.r_month*
440.r_month*
441.r_month*
442.r_random
443.r_month*
444.r_random
445.r_random
446.r_month-2
447.r_month*
448.r_month*
449.r_month-2
450.r_month-2
451.r_random
452.r_month*
453.r_month*
454.r_month-3
455.r_random
456.r_random
457.r_month*
458.r_month-2
459.r_month*
460.r_month*
461.r_month-2
462.r_random
463.r_month*
464.r_random
465.r_month-2
466.r_month*
467.r_month*
468.r_random
469.r_random
470.r_month*
471.r_month*
472.r_month-3
473.r_month-3
474.r_year
475.r_month-3
476.r_year
477.r_month*
478.r_year
479.r_month*
480.r_year
481.r_month-2
482.r_month-2
483.r_month-2
484.r_month-2
485.r_month-2
486.r_month-3
487.r_random
488.r_month-2
489.r_month*
490.r_month*
491.r_month-2
492.r_month-2
493.r_month*
494.r_month-3
495.r_month*
496.r_month*
497.r_month-3
498.r_month-3
499.r_month*
500.r_month*


17
--
packt - mastering unit testing
i1 - 6,7,8
i2- 4

- don't instantiate dependencies in the constructor. it is impossible to mock . pass the real implementation of the dependencies to the constructor or to the setter methods of the code under test.
- tdd steps - write a failing test - add code only to satisfy the test - refactor code to improve quality - repeat . 
- test code smells 
	- test code duplication 
	- test code body should just be an expansion of test description , anything more is mumbo jumbo.
18
--
- shortcuts in reasoning chapter 12.

19.
--
- shortcuts in reasoning chapter 13 . ( watch you tube videos , you lack severely here)
- bank po reasoning puzzle questions , you tube b ankersadda247 , anshul saini

20
--

23
--
!!! time table

Non-fasting-weekdays- 6am- wake up 6-10:30- study + pranayam + 2*protein drink + fresh 10:30-11- get ready for office 11-12-travel 12-7-office + lunch + dinner 7-8-travel to gym 8-10-gym + protein shake 10-11-rtn2 + sarvangasan 11-6-- sleep 

fasting weekdays- 6am- wake up 6-10:30- study + pranayam + 2*protein drink + fresh 10:30-11- get ready for office 11-12-travel 12-7-office + lunch + dinner 7-8-travel to room 8-10-work/study 10-11-rtn2 + sarvangasan 11-6-- sleep 

non-fasting-weekend- 6am- wake up 6-7:30-study 7:30-10-gym + protein shake 10-11-rtn2 + sarvangasan 11-6-- sleep 

fasting-weekend- 6am- wake up 6-10pm - study 10-11-rtn2 + sarvangasan 11-6-- sleep 

28
--
graphql 1-5 it1